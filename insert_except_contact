DECLARE FILTRO_PERIODO DATE DEFAULT /*'YYYY-MM-01'*/ <FILTRO_PERIODO>
;


-- BORRO REGISTROS PARA EVITAR DUPLICIDAD AL INSERTAR MISMO PERIODO VARIAS VECES
DELETE drop table`meli-bi-data.SBOX_MKTVIS.P_CONTENT_MOTORS`
WHERE MESLISTING = FILTRO_PERIODO
;

-- COMIENZO DE INSERT
INSERT `meli-bi-data.SBOX_MKTVIS.P_CONTENT_MOTORS` 

-- PASO 1: TRAIGO ITEMS CON SUS ATRIBUTOS PIVOTEADOS EN COLUMNAS
WITH ITEM_ATTRIBUTES_1 AS
(
SELECT
    SIT_SITE_ID
  , ITE_ITEM_PARENT_ITEM_ID AS ITE_PARENT_ITEM_ID
  , ITE_ITEM_ID
  , ITE_ITEM_STATE
  , ITE_ITEM_CITY
  , REGEXP_REPLACE(ITE_ITEM_DOM_DOMAIN_ID, '[A-Z]+.-','') AS ITE_ITEM_DOM_DOMAIN_ID
  , (SELECT MAX(ITE_ITEM_ATTRIBUTES.VALUE_NAME) FROM UNNEST(A.ITE_ITEM_ATTRIBUTES) AS ITE_ITEM_ATTRIBUTES WHERE ITE_ITEM_ATTRIBUTES.ID = 'VEHICLE_BODY_TYPE') AS VEHICLE_BODY_TYPE
  , (SELECT MAX(ITE_ITEM_ATTRIBUTES.VALUE_NAME) FROM UNNEST(A.ITE_ITEM_ATTRIBUTES) AS ITE_ITEM_ATTRIBUTES WHERE ITE_ITEM_ATTRIBUTES.ID = 'BRAND') AS BRAND
  , (SELECT MAX(ITE_ITEM_ATTRIBUTES.VALUE_NAME) FROM UNNEST(A.ITE_ITEM_ATTRIBUTES) AS ITE_ITEM_ATTRIBUTES WHERE ITE_ITEM_ATTRIBUTES.ID = 'MODEL') AS MODEL
  , (SELECT MAX(ITE_ITEM_ATTRIBUTES.VALUE_NAME) FROM UNNEST(A.ITE_ITEM_ATTRIBUTES) AS ITE_ITEM_ATTRIBUTES WHERE ITE_ITEM_ATTRIBUTES.ID = 'SHORT_VERSION') AS SHORT_VERSION
  , (SELECT MAX(ITE_ITEM_ATTRIBUTES.VALUE_NAME) FROM UNNEST(A.ITE_ITEM_ATTRIBUTES) AS ITE_ITEM_ATTRIBUTES WHERE ITE_ITEM_ATTRIBUTES.ID = 'TRIM') AS TRIM
  , (SELECT MAX(ITE_ITEM_ATTRIBUTES.VALUE_NAME) FROM UNNEST(A.ITE_ITEM_ATTRIBUTES) AS ITE_ITEM_ATTRIBUTES WHERE ITE_ITEM_ATTRIBUTES.ID = 'ITEM_CONDITION') AS ITEM_CONDITION
  , (SELECT MAX(ITE_ITEM_ATTRIBUTES.VALUE_NAME) FROM UNNEST(A.ITE_ITEM_ATTRIBUTES) AS ITE_ITEM_ATTRIBUTES WHERE ITE_ITEM_ATTRIBUTES.ID = 'KILOMETERS') AS KILOMETERS
  , (SELECT MAX(ITE_ITEM_ATTRIBUTES.VALUE_NAME) FROM UNNEST(A.ITE_ITEM_ATTRIBUTES) AS ITE_ITEM_ATTRIBUTES WHERE ITE_ITEM_ATTRIBUTES.ID = 'VEHICLE_YEAR') AS VEHICLE_YEAR
  , (SELECT MAX(ITE_ITEM_ATTRIBUTES.VALUE_NAME) FROM UNNEST(A.ITE_ITEM_ATTRIBUTES) AS ITE_ITEM_ATTRIBUTES WHERE ITE_ITEM_ATTRIBUTES.ID = 'TRANSMISSION') AS TRANSMISSION
  , (SELECT MAX(ITE_ITEM_ATTRIBUTES.VALUE_NAME) FROM UNNEST(A.ITE_ITEM_ATTRIBUTES) AS ITE_ITEM_ATTRIBUTES WHERE ITE_ITEM_ATTRIBUTES.ID = 'ENGINE') AS ENGINE
  , (SELECT MAX(ITE_ITEM_ATTRIBUTES.VALUE_NAME) FROM UNNEST(A.ITE_ITEM_ATTRIBUTES) AS ITE_ITEM_ATTRIBUTES WHERE ITE_ITEM_ATTRIBUTES.ID = 'FUEL_TYPE') AS FUEL_TYPE
  , (SELECT MAX(ITE_ITEM_ATTRIBUTES.VALUE_NAME) FROM UNNEST(A.ITE_ITEM_ATTRIBUTES) AS ITE_ITEM_ATTRIBUTES WHERE ITE_ITEM_ATTRIBUTES.ID = 'DOORS') AS DOORS
  , (SELECT MAX(ITE_ITEM_ATTRIBUTES.VALUE_NAME) FROM UNNEST(A.ITE_ITEM_ATTRIBUTES) AS ITE_ITEM_ATTRIBUTES WHERE ITE_ITEM_ATTRIBUTES.ID = 'COLOR') AS COLOR
  , (SELECT MAX(ITE_ITEM_ATTRIBUTES.VALUE_NAME) FROM UNNEST(A.ITE_ITEM_ATTRIBUTES) AS ITE_ITEM_ATTRIBUTES WHERE ITE_ITEM_ATTRIBUTES.ID = 'STEERING') AS STEERING
  , (SELECT MAX(ITE_ITEM_ATTRIBUTES.VALUE_NAME) FROM UNNEST(A.ITE_ITEM_ATTRIBUTES) AS ITE_ITEM_ATTRIBUTES WHERE ITE_ITEM_ATTRIBUTES.ID = 'HAS_STABILITY_CONTROL') AS HAS_STABILITY_CONTROL
  , (SELECT MAX(ITE_ITEM_ATTRIBUTES.VALUE_NAME) FROM UNNEST(A.ITE_ITEM_ATTRIBUTES) AS ITE_ITEM_ATTRIBUTES WHERE ITE_ITEM_ATTRIBUTES.ID = 'HAS_ABS_BRAKES') AS HAS_ABS_BRAKES
  , (SELECT MAX(ITE_ITEM_ATTRIBUTES.VALUE_NAME) FROM UNNEST(A.ITE_ITEM_ATTRIBUTES) AS ITE_ITEM_ATTRIBUTES WHERE ITE_ITEM_ATTRIBUTES.ID = 'WITH_ABS') AS WITH_ABS
  , (SELECT MAX(ITE_ITEM_ATTRIBUTES.VALUE_NAME) FROM UNNEST(A.ITE_ITEM_ATTRIBUTES) AS ITE_ITEM_ATTRIBUTES WHERE ITE_ITEM_ATTRIBUTES.ID = 'WITH_ABS_BRAKES') AS WITH_ABS_BRAKES
  , (SELECT MAX(ITE_ITEM_ATTRIBUTES.VALUE_NAME) FROM UNNEST(A.ITE_ITEM_ATTRIBUTES) AS ITE_ITEM_ATTRIBUTES WHERE ITE_ITEM_ATTRIBUTES.ID = 'LICENSE_PLATE') AS LICENSE_PLATE
  , (SELECT MAX(ITE_ITEM_ATTRIBUTES.VALUE_NAME) FROM UNNEST(A.ITE_ITEM_ATTRIBUTES) AS ITE_ITEM_ATTRIBUTES WHERE ITE_ITEM_ATTRIBUTES.ID = 'TRACTION_CONTROL') AS TRACTION_CONTROL
  , (SELECT MAX(ITE_ITEM_ATTRIBUTES.VALUE_NAME) FROM UNNEST(A.ITE_ITEM_ATTRIBUTES) AS ITE_ITEM_ATTRIBUTES WHERE ITE_ITEM_ATTRIBUTES.ID = 'HAS_PASSENGER_AIRBAG') AS HAS_PASSENGER_AIRBAG
  , (SELECT MAX(ITE_ITEM_ATTRIBUTES.VALUE_NAME) FROM UNNEST(A.ITE_ITEM_ATTRIBUTES) AS ITE_ITEM_ATTRIBUTES WHERE ITE_ITEM_ATTRIBUTES.ID = 'HAS_DRIVER_AIRBAG') AS HAS_DRIVER_AIRBAG
  , (SELECT MAX(ITE_ITEM_ATTRIBUTES.VALUE_NAME) FROM UNNEST(A.ITE_ITEM_ATTRIBUTES) AS ITE_ITEM_ATTRIBUTES WHERE ITE_ITEM_ATTRIBUTES.ID = 'HAS_SIDE_IMPACT_AIRBAG') AS HAS_SIDE_IMPACT_AIRBAG
  , (SELECT MAX(ITE_ITEM_ATTRIBUTES.VALUE_NAME) FROM UNNEST(A.ITE_ITEM_ATTRIBUTES) AS ITE_ITEM_ATTRIBUTES WHERE ITE_ITEM_ATTRIBUTES.ID = 'HAS_CURTAIN_AIRBAG') AS HAS_CURTAIN_AIRBAG
  , (SELECT MAX(ITE_ITEM_ATTRIBUTES.VALUE_NAME) FROM UNNEST(A.ITE_ITEM_ATTRIBUTES) AS ITE_ITEM_ATTRIBUTES WHERE ITE_ITEM_ATTRIBUTES.ID = 'HAS_SIDE_IMPACT_REAR_AIRBAG') AS HAS_SIDE_IMPACT_REAR_AIRBAG
  , (SELECT MAX(ITE_ITEM_ATTRIBUTES.VALUE_NAME) FROM UNNEST(A.ITE_ITEM_ATTRIBUTES) AS ITE_ITEM_ATTRIBUTES WHERE ITE_ITEM_ATTRIBUTES.ID = 'HAS_SIDE_IMPACT_FRONT_AIRBAG') AS HAS_SIDE_IMPACT_FRONT_AIRBAG
  , (SELECT MAX(ITE_ITEM_ATTRIBUTES.VALUE_NAME) FROM UNNEST(A.ITE_ITEM_ATTRIBUTES) AS ITE_ITEM_ATTRIBUTES WHERE ITE_ITEM_ATTRIBUTES.ID = 'WITH_SIDE_IMPACT_AIRBAGS') AS WITH_SIDE_IMPACT_AIRBAGS
  , (SELECT MAX(ITE_ITEM_ATTRIBUTES.VALUE_NAME) FROM UNNEST(A.ITE_ITEM_ATTRIBUTES) AS ITE_ITEM_ATTRIBUTES WHERE ITE_ITEM_ATTRIBUTES.ID = 'MOTO_TYPE') AS MOTO_TYPE
  , (SELECT MAX(ITE_ITEM_ATTRIBUTES.VALUE_NAME) FROM UNNEST(A.ITE_ITEM_ATTRIBUTES) AS ITE_ITEM_ATTRIBUTES WHERE ITE_ITEM_ATTRIBUTES.ID = 'ENGINE_DISPLACEMENT') AS ENGINE_DISPLACEMENT
  , (SELECT MAX(ITE_ITEM_ATTRIBUTES.VALUE_NAME) FROM UNNEST(A.ITE_ITEM_ATTRIBUTES) AS ITE_ITEM_ATTRIBUTES WHERE ITE_ITEM_ATTRIBUTES.ID = 'IS_SINGLE_OWNER') AS IS_SINGLE_OWNER
  , (SELECT MAX(ITE_ITEM_ATTRIBUTES.VALUE_NAME) FROM UNNEST(A.ITE_ITEM_ATTRIBUTES) AS ITE_ITEM_ATTRIBUTES WHERE ITE_ITEM_ATTRIBUTES.ID = 'PASSENGER_CAPACITY') AS PASSENGER_CAPACITY

  , (SELECT MAX(ITE_ITEM_SALES_TERMS.VALUE_NAME) FROM UNNEST(A.ITE_ITEM_SALES_TERMS) AS ITE_ITEM_SALES_TERMS WHERE ITE_ITEM_SALES_TERMS.ID = 'IS_FINANCEABLE') AS IS_FINANCEABLE

FROM `meli-bi-data.WHOWNER.LK_ITE_ITEMS` AS A

)

-- PASO 2: CONVIERTO ALGUNOS ATRIBUTOS EN BOOLEANOS
, ITEM_ATTRIBUTES_2 AS

(
SELECT *
  EXCEPT(HAS_ABS_BRAKES,WITH_ABS_BRAKES,WITH_ABS,HAS_PASSENGER_AIRBAG,HAS_DRIVER_AIRBAG,HAS_SIDE_IMPACT_AIRBAG,HAS_CURTAIN_AIRBAG,HAS_SIDE_IMPACT_REAR_AIRBAG,WITH_SIDE_IMPACT_AIRBAGS,HAS_SIDE_IMPACT_FRONT_AIRBAG,IS_SINGLE_OWNER,HAS_STABILITY_CONTROL,IS_FINANCEABLE,KILOMETERS)

  , REGEXP_EXTRACT(KILOMETERS,'[0-9]+') AS KILOMETERS
  -- BOOLEAN DE IS_FINANCEABLE
  , (CASE WHEN REGEXP_CONTAINS(UPPER(IS_FINANCEABLE), 'S.*') IS TRUE THEN 1
          WHEN REGEXP_CONTAINS(UPPER(IS_FINANCEABLE), 'Y.*') IS TRUE THEN 1
          WHEN REGEXP_CONTAINS(UPPER(IS_FINANCEABLE), 'T.*') IS TRUE THEN 1
          WHEN IS_FINANCEABLE = '1' THEN 1
          WHEN REGEXP_CONTAINS(UPPER(IS_FINANCEABLE), 'N.*') IS TRUE THEN 0
          WHEN REGEXP_CONTAINS(UPPER(IS_FINANCEABLE), 'F.*') IS TRUE THEN 0
          WHEN IS_FINANCEABLE = '0' THEN 0
          ELSE NULL END) AS IS_FINANCEABLE

  -- BOOLEAN DE HAS_ABS_BRAKES
  , (CASE WHEN REGEXP_CONTAINS(UPPER(HAS_ABS_BRAKES), 'S.*') IS TRUE THEN 1
          WHEN REGEXP_CONTAINS(UPPER(HAS_ABS_BRAKES), 'Y.*') IS TRUE THEN 1
          WHEN REGEXP_CONTAINS(UPPER(HAS_ABS_BRAKES), 'T.*') IS TRUE THEN 1
          WHEN HAS_ABS_BRAKES = '1' THEN 1
          WHEN REGEXP_CONTAINS(UPPER(WITH_ABS_BRAKES), 'S.*') IS TRUE THEN 1
          WHEN REGEXP_CONTAINS(UPPER(WITH_ABS_BRAKES), 'Y.*') IS TRUE THEN 1
          WHEN REGEXP_CONTAINS(UPPER(WITH_ABS_BRAKES), 'T.*') IS TRUE THEN 1
          WHEN WITH_ABS_BRAKES = '1' THEN 1
          WHEN REGEXP_CONTAINS(UPPER(WITH_ABS), 'S.*') IS TRUE THEN 1
          WHEN REGEXP_CONTAINS(UPPER(WITH_ABS), 'Y.*') IS TRUE THEN 1
          WHEN REGEXP_CONTAINS(UPPER(WITH_ABS), 'T.*') IS TRUE THEN 1
          WHEN WITH_ABS = '1' THEN 1
          WHEN REGEXP_CONTAINS(UPPER(HAS_ABS_BRAKES), 'N.*') IS TRUE THEN 0
          WHEN REGEXP_CONTAINS(UPPER(HAS_ABS_BRAKES), 'F.*') IS TRUE THEN 0
          WHEN HAS_ABS_BRAKES = '0' THEN 0
          WHEN REGEXP_CONTAINS(UPPER(WITH_ABS_BRAKES), 'N.*') IS TRUE THEN 0
          WHEN REGEXP_CONTAINS(UPPER(WITH_ABS_BRAKES), 'F.*') IS TRUE THEN 0
          WHEN WITH_ABS_BRAKES = '0' THEN 0
          WHEN REGEXP_CONTAINS(UPPER(WITH_ABS), 'N.*') IS TRUE THEN 0
          WHEN REGEXP_CONTAINS(UPPER(WITH_ABS), 'F.*') IS TRUE THEN 0
          WHEN WITH_ABS = '0' THEN 0
          ELSE NULL END) AS HAS_ABS_BRAKES

  -- BOOLEAN DE HAS_AIRBAG
  , (CASE WHEN REGEXP_CONTAINS(UPPER(HAS_PASSENGER_AIRBAG), 'S.*') IS TRUE THEN 1
          WHEN REGEXP_CONTAINS(UPPER(HAS_PASSENGER_AIRBAG), 'Y.*') IS TRUE THEN 1
          WHEN REGEXP_CONTAINS(UPPER(HAS_PASSENGER_AIRBAG), 'T.*') IS TRUE THEN 1
          WHEN HAS_PASSENGER_AIRBAG = '1' THEN 1
          WHEN REGEXP_CONTAINS(UPPER(HAS_DRIVER_AIRBAG), 'S.*') IS TRUE THEN 1
          WHEN REGEXP_CONTAINS(UPPER(HAS_DRIVER_AIRBAG), 'Y.*') IS TRUE THEN 1
          WHEN REGEXP_CONTAINS(UPPER(HAS_DRIVER_AIRBAG), 'T.*') IS TRUE THEN 1
          WHEN HAS_DRIVER_AIRBAG = '1' THEN 1
          WHEN REGEXP_CONTAINS(UPPER(HAS_SIDE_IMPACT_AIRBAG), 'S.*') IS TRUE THEN 1
          WHEN REGEXP_CONTAINS(UPPER(HAS_SIDE_IMPACT_AIRBAG), 'Y.*') IS TRUE THEN 1
          WHEN REGEXP_CONTAINS(UPPER(HAS_SIDE_IMPACT_AIRBAG), 'T.*') IS TRUE THEN 1
          WHEN HAS_SIDE_IMPACT_AIRBAG = '1' THEN 1
          WHEN REGEXP_CONTAINS(UPPER(HAS_CURTAIN_AIRBAG), 'S.*') IS TRUE THEN 1
          WHEN REGEXP_CONTAINS(UPPER(HAS_CURTAIN_AIRBAG), 'Y.*') IS TRUE THEN 1
          WHEN REGEXP_CONTAINS(UPPER(HAS_CURTAIN_AIRBAG), 'T.*') IS TRUE THEN 1
          WHEN HAS_CURTAIN_AIRBAG = '1' THEN 1
          WHEN REGEXP_CONTAINS(UPPER(HAS_SIDE_IMPACT_REAR_AIRBAG), 'S.*') IS TRUE THEN 1
          WHEN REGEXP_CONTAINS(UPPER(HAS_SIDE_IMPACT_REAR_AIRBAG), 'Y.*') IS TRUE THEN 1
          WHEN REGEXP_CONTAINS(UPPER(HAS_SIDE_IMPACT_REAR_AIRBAG), 'T.*') IS TRUE THEN 1
          WHEN HAS_SIDE_IMPACT_REAR_AIRBAG = '1' THEN 1
          WHEN REGEXP_CONTAINS(UPPER(WITH_SIDE_IMPACT_AIRBAGS), 'S.*') IS TRUE THEN 1
          WHEN REGEXP_CONTAINS(UPPER(WITH_SIDE_IMPACT_AIRBAGS), 'Y.*') IS TRUE THEN 1
          WHEN REGEXP_CONTAINS(UPPER(WITH_SIDE_IMPACT_AIRBAGS), 'T.*') IS TRUE THEN 1
          WHEN WITH_SIDE_IMPACT_AIRBAGS = '1' THEN 1
          WHEN REGEXP_CONTAINS(UPPER(HAS_SIDE_IMPACT_FRONT_AIRBAG), 'S.*') IS TRUE THEN 1
          WHEN REGEXP_CONTAINS(UPPER(HAS_SIDE_IMPACT_FRONT_AIRBAG), 'Y.*') IS TRUE THEN 1
          WHEN REGEXP_CONTAINS(UPPER(HAS_SIDE_IMPACT_FRONT_AIRBAG), 'T.*') IS TRUE THEN 1
          WHEN HAS_SIDE_IMPACT_FRONT_AIRBAG = '1' THEN 1
          WHEN REGEXP_CONTAINS(UPPER(HAS_PASSENGER_AIRBAG), 'N.*') IS TRUE THEN 0
          WHEN REGEXP_CONTAINS(UPPER(HAS_PASSENGER_AIRBAG), 'F.*') IS TRUE THEN 0
          WHEN HAS_PASSENGER_AIRBAG = '0' THEN 0
          WHEN REGEXP_CONTAINS(UPPER(HAS_DRIVER_AIRBAG), 'N.*') IS TRUE THEN 0
          WHEN REGEXP_CONTAINS(UPPER(HAS_DRIVER_AIRBAG), 'F.*') IS TRUE THEN 0
          WHEN HAS_DRIVER_AIRBAG = '0' THEN 0
          WHEN REGEXP_CONTAINS(UPPER(HAS_SIDE_IMPACT_AIRBAG), 'N.*') IS TRUE THEN 0
          WHEN REGEXP_CONTAINS(UPPER(HAS_SIDE_IMPACT_AIRBAG), 'F.*') IS TRUE THEN 0
          WHEN HAS_SIDE_IMPACT_AIRBAG = '0' THEN 0
          WHEN REGEXP_CONTAINS(UPPER(HAS_CURTAIN_AIRBAG), 'N.*') IS TRUE THEN 0
          WHEN REGEXP_CONTAINS(UPPER(HAS_CURTAIN_AIRBAG), 'F.*') IS TRUE THEN 0
          WHEN HAS_CURTAIN_AIRBAG = '0' THEN 0
          WHEN REGEXP_CONTAINS(UPPER(HAS_SIDE_IMPACT_REAR_AIRBAG), 'N.*') IS TRUE THEN 0
          WHEN REGEXP_CONTAINS(UPPER(HAS_SIDE_IMPACT_REAR_AIRBAG), 'F.*') IS TRUE THEN 0
          WHEN HAS_SIDE_IMPACT_REAR_AIRBAG = '0' THEN 0
          WHEN REGEXP_CONTAINS(UPPER(WITH_SIDE_IMPACT_AIRBAGS), 'N.*') IS TRUE THEN 0
          WHEN REGEXP_CONTAINS(UPPER(WITH_SIDE_IMPACT_AIRBAGS), 'F.*') IS TRUE THEN 0
          WHEN WITH_SIDE_IMPACT_AIRBAGS = '0' THEN 0
          WHEN REGEXP_CONTAINS(UPPER(HAS_SIDE_IMPACT_FRONT_AIRBAG), 'N.*') IS TRUE THEN 0
          WHEN REGEXP_CONTAINS(UPPER(HAS_SIDE_IMPACT_FRONT_AIRBAG), 'F.*') IS TRUE THEN 0
          WHEN HAS_SIDE_IMPACT_FRONT_AIRBAG = '0' THEN 0
          ELSE NULL END) AS HAS_AIRBAG

  -- BOOLEAN IS_SINGLE_OWNER
  , (CASE WHEN REGEXP_CONTAINS(UPPER(IS_SINGLE_OWNER), 'S.*') IS TRUE THEN 1
          WHEN REGEXP_CONTAINS(UPPER(IS_SINGLE_OWNER), 'Y.*') IS TRUE THEN 1
          WHEN REGEXP_CONTAINS(UPPER(IS_SINGLE_OWNER), 'T.*') IS TRUE THEN 1
          WHEN IS_SINGLE_OWNER = '1' THEN 1
          WHEN REGEXP_CONTAINS(UPPER(IS_SINGLE_OWNER), 'N.*') IS TRUE THEN 0
          WHEN REGEXP_CONTAINS(UPPER(IS_SINGLE_OWNER), 'F.*') IS TRUE THEN 0
          WHEN IS_SINGLE_OWNER = '0' THEN 0
          ELSE NULL END) AS IS_SINGLE_OWNER

  -- BOOLEAN HAS_STABILITY_CONTROL
  , (CASE WHEN REGEXP_CONTAINS(UPPER(HAS_STABILITY_CONTROL), 'S.*') IS TRUE THEN 1
          WHEN REGEXP_CONTAINS(UPPER(HAS_STABILITY_CONTROL), 'Y.*') IS TRUE THEN 1
          WHEN REGEXP_CONTAINS(UPPER(HAS_STABILITY_CONTROL), 'T.*') IS TRUE THEN 1
          WHEN HAS_STABILITY_CONTROL = '1' THEN 1
          WHEN REGEXP_CONTAINS(UPPER(HAS_STABILITY_CONTROL), 'N.*') IS TRUE THEN 0
          WHEN REGEXP_CONTAINS(UPPER(HAS_STABILITY_CONTROL), 'F.*') IS TRUE THEN 0
          WHEN HAS_STABILITY_CONTROL = '0' THEN 0
          ELSE NULL END) AS HAS_STABILITY_CONTROL
  

FROM ITEM_ATTRIBUTES_1 AS ATT

)

--PASO 3: TRAIGO LA ULTIMA FOTO DEL ITEM MENSUAL Y ALGUNAS COLUMNAS EXTRA
, BT_LIVE_LISTINGS_CLASSIFIEDS AS
(
  SELECT 
      A.SIT_SITE_ID
    , DATE_TRUNC(A.TIM_DAY, MONTH) AS MESLISTING
    , A.ITE_ITEM_ID
    , A.TIM_DAY
    , A.ITE_ITEM_TITLE
    , A.CUS_CUST_ID_SEL
    , A.SIT_CURRENCY_ID
    , A.ITE_CURRENT_PRICE
    , (CASE WHEN A.SIT_CURRENCY_ID <> 'DOL' THEN ITE_CURRENT_PRICE 
            WHEN A.SIT_CURRENCY_ID = 'DOL' THEN SAFE_MULTIPLY(ITE_CURRENT_PRICE , TC.CCO_TC_VALUE)
            ELSE NULL END) AS PRECIO_LOCAL
    , (CASE WHEN A.SIT_CURRENCY_ID = 'DOL' THEN ITE_CURRENT_PRICE 
            WHEN A.SIT_CURRENCY_ID <> 'DOL' THEN SAFE_DIVIDE(ITE_CURRENT_PRICE , TC.CCO_TC_VALUE)
            ELSE NULL END) AS PRECIO_USD
    , A.ITE_AUCTION_START_DATETIME
    , A.ITE_AUCTION_STOP_DATETIME
    , CAT.CAT_CATEG_ID_L1
    , CAT.CAT_CATEG_NAME_L1
    , CAT.CAT_CATEG_ID_L2
    , CAT.CAT_CATEG_NAME_L2
    , CAT.CAT_CATEG_ID_L7
    , DEALER.DEALER_TYPE_GROUP_DESC
    , C.CBO_DESCRIPTION_CLASSI



  FROM `meli-bi-data.WHOWNER.BT_LIVE_LISTINGS_CLASSIFIEDS` AS A

  -- LE AGREGO CATEGORY NAME
  LEFT JOIN `meli-bi-data.WHOWNER.AG_LK_CAT_CATEGORIES` AS CAT 
	ON    CAT.CAT_CATEG_ID_L7 = CAST(A.CAT_CATEG_ID_L7 AS INTEGER)
		AND CAT.SIT_SITE_ID = A.SIT_SITE_ID

  -- LE AGREGO TIPO DE CUSOMTER: FSBO, DEALER, ETC
  LEFT JOIN `meli-bi-data.WHOWNER.LK_CUS_DEALER_TYPES_GROUP` AS DEALER
	  ON A.cns_concesionario_flag = DEALER.dealer_type_id

  -- LE AGREGO TASA DE CAMBIO PARA COLUMNAS DE PRECIO_LOCAL PRECIO_USD
  LEFT JOIN `meli-bi-data.WHOWNER.LK_CURRENCY_CONVERTION` AS TC
  ON A.SIT_SITE_ID = TC.SIT_SITE_ID
    AND A.TIM_DAY	= TC.TIM_DAY_TC

  -- TRAIGO TIPO DE PUBLICACION: GRATIS, ORO, ETC
  LEFT JOIN `meli-bi-data.WHOWNER.LK_CBO_COMBOS_CLASSIFIEDS` AS C 
  ON A.CBO_COMBO_CLASSI_ID = C.CBO_COMBO_CLASSI_ID -- lo uno con la foreign key para evitar duplicar datos


  WHERE DATE_TRUNC(A.TIM_DAY, MONTH) = FILTRO_PERIODO
    AND A.SIT_SITE_ID IN ('MCO','MLA','MLB','MLC','MLM','MLU')
    AND CAT.CAT_CATEG_ID_L1 = 1743

    -- INICIO FILTRO DE ITEMS FRAUDE
    AND (
            NOT EXISTS
                      (
                        SELECT 1

                        FROM `meli-bi-data.WHOWNER.LK_ITE_ITEMS` AS FRAUDE_1
                        WHERE ITE_ITEM_FRAUD_PREVENT_STATUS LIKE '%for_prevention'
                          AND FRAUDE_1.SIT_SITE_ID = A.SIT_SITE_ID
                          AND FRAUDE_1.ITE_ITEM_ID = A.ITE_ITEM_ID
                      )

        OR NOT EXISTS
                      (
                        SELECT 1

                        FROM `meli-bi-data.SBOX_CLASSI_PLANNING.LK_SCORINNG_ITEMS` AS FRAUDE_2
                        WHERE marca_tko = 'confirmado_rm'
                          AND FRAUDE_2.SIT_SITE_ID = A.SIT_SITE_ID
                          AND FRAUDE_2.ITEM_ID = A.ITE_ITEM_ID
                      )
                      
        OR NOT EXISTS
                      (
                        SELECT 1

                        FROM `meli-bi-data.WHOWNER.LK_CUS_CUSTOMERS_DATA` AS FRAUDE_3
                        WHERE cus_cust_verif_id IN ('PREV_INHAB_PERM', 'MOD_INHAB_PERM', 'TKO', 'PAUSA_TOTAL','PAUSA_IV', 'IV')
                          AND FRAUDE_3.SIT_SITE_ID_CUS = A.SIT_SITE_ID
                          AND FRAUDE_3.CUS_CUST_ID = A.CUS_CUST_ID_SEL 
                      )
        )
    -- FIN FILTRO DE ITEMS FRAUDE
	
  QUALIFY ROW_NUMBER() OVER (PARTITION BY A.SIT_SITE_ID,DATE_TRUNC(A.TIM_DAY, MONTH), A.ITE_ITEM_ID ORDER BY A.TIM_DAY DESC) = 1

)

-- PASO 4: LE AGREGO VISITAS AL PASO 3
, BT_LIVE_LISTINGS_CLASSIFIEDS_CON_VISITAS AS

(
  SELECT A.*
    , B.VISIT

  FROM BT_LIVE_LISTINGS_CLASSIFIEDS AS A

  LEFT JOIN 
          (
          SELECT
              DATE_TRUNC(TIM_DAY, MONTH) AS MesListing
            , CAT_CATEG_ID_L1
            , SIT_SITE_ID
            , ITE_ITEM_ID
            , SUM (QTY_VISITS) AS VISIT

          FROM `meli-bi-data.WHOWNER.BT_VISITS`

          WHERE CAT_CATEG_ID_L1 = '1743'
            AND SIT_SITE_ID IN ('MCO','MLA','MLB','MLC','MLM','MLU')
            AND DATE_TRUNC(TIM_DAY, MONTH) = FILTRO_PERIODO

          GROUP BY 1,2,3,4
          ) AS B
  ON    A.SIT_SITE_ID = B.SIT_SITE_ID
    AND A.ITE_ITEM_ID = B.ITE_ITEM_ID
    AND A.MESLISTING = B.MESLISTING

)

, BT_LIVE_LISTINGS_CLASSIFIEDS_CON_ATRIBUTOS AS

(
-- PASO 5: JOINEO PASO 2 Y 5 (ITEMS CON VISITAS + ATRIBUTOS)
SELECT A.*, B.* EXCEPT(SIT_SITE_ID, ITE_ITEM_ID)
  , NULL AS CONTACT
  , CURRENT_TIMESTAMP() AS AUD_TIMESTAMP

FROM BT_LIVE_LISTINGS_CLASSIFIEDS_CON_VISITAS AS A

LEFT JOIN ITEM_ATTRIBUTES_2 AS B
ON A.SIT_SITE_ID = B.SIT_SITE_ID
AND A.ITE_ITEM_ID = B.ITE_ITEM_ID

)

SELECT 
    AUD_TIMESTAMP
  , MESLISTING
  , SIT_SITE_ID
  , CUS_CUST_ID_SEL
  , DEALER_TYPE_GROUP_DESC
  , ITE_PARENT_ITEM_ID
  , ITE_ITEM_ID
  , CBO_DESCRIPTION_CLASSI
  , VISIT
  , CONTACT
  , ITE_AUCTION_START_DATETIME
  , ITE_AUCTION_STOP_DATETIME
  , TIM_DAY
  , ITE_ITEM_TITLE
  , SIT_CURRENCY_ID
  , ITE_CURRENT_PRICE
  , PRECIO_LOCAL
  , PRECIO_USD
  , CAT_CATEG_ID_L1
  , CAT_CATEG_NAME_L1
  , CAT_CATEG_ID_L2
  , CAT_CATEG_NAME_L2
  , CAT_CATEG_ID_L7
  , ITE_ITEM_DOM_DOMAIN_ID
  , ITE_ITEM_STATE
  , ITE_ITEM_CITY
  , VEHICLE_BODY_TYPE
  , BRAND
  , MODEL
  , TRIM
  , SHORT_VERSION
  , ITEM_CONDITION
  , KILOMETERS
  , VEHICLE_YEAR
  , TRANSMISSION
  , ENGINE
  , FUEL_TYPE
  , DOORS
  , COLOR
  , STEERING
  , LICENSE_PLATE
  , TRACTION_CONTROL
  , MOTO_TYPE
  , ENGINE_DISPLACEMENT
  , PASSENGER_CAPACITY
  , IS_FINANCEABLE
  , HAS_ABS_BRAKES
  , HAS_AIRBAG
  , IS_SINGLE_OWNER
  , HAS_STABILITY_CONTROL

FROM BT_LIVE_LISTINGS_CLASSIFIEDS_CON_ATRIBUTOS
;
